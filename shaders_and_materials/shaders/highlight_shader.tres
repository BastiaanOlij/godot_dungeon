[gd_resource type="VisualShader" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeVectorInterp" id=11]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="VisualShaderNodeColorUniform" id=1]
uniform_name = "Albedo"

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "Metalic"

[sub_resource type="VisualShaderNodeScalarUniform" id=3]
uniform_name = "Roughness"

[sub_resource type="VisualShaderNodeScalarUniform" id=4]
uniform_name = "Specular"

[sub_resource type="VisualShaderNodeFresnel" id=7]

[sub_resource type="VisualShaderNodeColorUniform" id=9]
uniform_name = "Outline"

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 5

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform vec4 Albedo : hint_color;
uniform float Metalic;
uniform float Roughness;
uniform float Specular;
uniform vec4 Outline : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = Albedo.rgb;
	float n_out2p1 = Albedo.a;

// ScalarUniform:3
	float n_out3p0 = Metalic;

// ScalarUniform:4
	float n_out4p0 = Roughness;

// ScalarUniform:5
	float n_out5p0 = Specular;

// ColorUniform:8
	vec3 n_out8p0 = Outline.rgb;
	float n_out8p1 = Outline.a;

// Fresnel:6
	float n_in6p3 = 1.00000;
	float n_out6p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in6p3);

// ScalarOp:9
	float n_in9p1 = 3.00000;
	float n_out9p0 = pow(n_out6p0, n_in9p1);

// VectorMix:10
	vec3 n_in10p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out10p0 = mix(n_in10p0, n_out8p0, vec3(n_out9p0));

// Output:0
	ALBEDO = n_out2p0;
	METALLIC = n_out3p0;
	ROUGHNESS = n_out4p0;
	SPECULAR = n_out5p0;
	EMISSION = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -143.654, -299.25 )
nodes/fragment/0/position = Vector2( 800, 100 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 80, 100 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 80, 220 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 80, 300 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 80, 380 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( -120, -100 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( 80, -240 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( 160, -100 )
nodes/fragment/10/node = SubResource( 11 )
nodes/fragment/10/position = Vector2( 380, -160 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 2, 4, 0, 0, 3, 5, 0, 0, 4, 6, 0, 9, 0, 9, 0, 10, 2, 10, 0, 0, 5, 8, 0, 10, 1, 2, 0, 0, 0 )
